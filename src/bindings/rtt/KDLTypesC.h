// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
// and
//       Institute for Software Integrated Systems
//       Vanderbilt University
//       Nashville, TN
//       USA
//       http://www.isis.vanderbilt.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

// TAO_IDL - Generated from
// be/be_codegen.cpp:153

#ifndef _TAO_IDL_KDLTYPESC_H_
#define _TAO_IDL_KDLTYPESC_H_


#include "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "tao/ORB.h"
#include "tao/Environment.h"
#include "tao/Sequence_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/VarOut_T.h"

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO 

#if defined(_MSC_VER)
#pragma warning(push)
#pragma warning(disable:4250)
#endif /* _MSC_VER */

#if defined (__BORLANDC__)
#pragma option push -w-rvl -w-rch -w-ccc -w-inl
#endif /* __BORLANDC__ */

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:48

namespace KDL
{
  
  // TAO_IDL - Generated from
  // be/be_visitor_module/module_ch.cpp:48
  
  namespace Corba
  {
    
    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:101

#if !defined (_KDL_CORBA_DOUBLESEQUENCE_CH_)
#define _KDL_CORBA_DOUBLESEQUENCE_CH_
    
    class DoubleSequence;
    
    typedef
      TAO_FixedSeq_Var_T<
          DoubleSequence,
          CORBA::Double
        >
      DoubleSequence_var;
    
    typedef
      TAO_Seq_Out_T<
          DoubleSequence,
          DoubleSequence_var,
          CORBA::Double
        >
      DoubleSequence_out;
    
    class  DoubleSequence
      : public
          TAO_Unbounded_Sequence<
              CORBA::Double
            >
    {
    public:
      DoubleSequence (void);
      DoubleSequence (CORBA::ULong max);
      DoubleSequence (
          CORBA::ULong max,
          CORBA::ULong length,
          CORBA::Double* buffer, 
          CORBA::Boolean release = 0
        );
      DoubleSequence (const DoubleSequence &);
      ~DoubleSequence (void);
      
      static void _tao_any_destructor (void *);
      
      typedef DoubleSequence_var _var_type;
    };

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:44
    
    extern  ::CORBA::TypeCode_ptr const _tc_DoubleSequence;
    
    // TAO_IDL - Generated from
    // be/be_type.cpp:258
    
    struct vector;
    
    typedef
      TAO_Fixed_Var_T<
          vector
        >
      vector_var;
    
    typedef
      vector &
      vector_out;
    
    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:57
    
    struct  vector
    {
      typedef vector_var _var_type;
      
      static void _tao_any_destructor (void *);
      CORBA::Double x;
      CORBA::Double y;
      CORBA::Double z;
    };
    
    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:44
    
    extern  ::CORBA::TypeCode_ptr const _tc_vector;
    
    // TAO_IDL - Generated from
    // be/be_type.cpp:258
    
    struct rotation;
    
    typedef
      TAO_Fixed_Var_T<
          rotation
        >
      rotation_var;
    
    typedef
      rotation &
      rotation_out;
    
    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:57
    
    struct  rotation
    {
      typedef rotation_var _var_type;
      
      static void _tao_any_destructor (void *);
      CORBA::Double Xx;
      CORBA::Double Xy;
      CORBA::Double Xz;
      CORBA::Double Yx;
      CORBA::Double Yy;
      CORBA::Double Yz;
      CORBA::Double Zx;
      CORBA::Double Zy;
      CORBA::Double Zz;
    };
    
    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:44
    
    extern  ::CORBA::TypeCode_ptr const _tc_rotation;
    
    // TAO_IDL - Generated from
    // be/be_type.cpp:258
    
    struct frame;
    
    typedef
      TAO_Fixed_Var_T<
          frame
        >
      frame_var;
    
    typedef
      frame &
      frame_out;
    
    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:57
    
    struct  frame
    {
      typedef frame_var _var_type;
      
      static void _tao_any_destructor (void *);
      KDL::Corba::vector p;
      KDL::Corba::rotation M;
    };
    
    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:44
    
    extern  ::CORBA::TypeCode_ptr const _tc_frame;
    
    // TAO_IDL - Generated from
    // be/be_type.cpp:258
    
    struct wrench;
    
    typedef
      TAO_Fixed_Var_T<
          wrench
        >
      wrench_var;
    
    typedef
      wrench &
      wrench_out;
    
    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:57
    
    struct  wrench
    {
      typedef wrench_var _var_type;
      
      static void _tao_any_destructor (void *);
      KDL::Corba::vector force;
      KDL::Corba::rotation torque;
    };
    
    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:44
    
    extern  ::CORBA::TypeCode_ptr const _tc_wrench;
    
    // TAO_IDL - Generated from
    // be/be_type.cpp:258
    
    struct twist;
    
    typedef
      TAO_Fixed_Var_T<
          twist
        >
      twist_var;
    
    typedef
      twist &
      twist_out;
    
    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:57
    
    struct  twist
    {
      typedef twist_var _var_type;
      
      static void _tao_any_destructor (void *);
      KDL::Corba::vector vel;
      KDL::Corba::rotation rot;
    };
    
    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:44
    
    extern  ::CORBA::TypeCode_ptr const _tc_twist;
  
  // TAO_IDL - Generated from
  // be/be_visitor_module/module_ch.cpp:66
  
  } // module KDL::Corba

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:66

} // module KDL

// TAO_IDL - Generated from
// be/be_visitor_traits.cpp:61

// Traits specializations.
namespace TAO
{
}

// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const KDL::Corba::DoubleSequence &); // copying version
 void operator<<= (CORBA::Any &, KDL::Corba::DoubleSequence*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, KDL::Corba::DoubleSequence *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const KDL::Corba::DoubleSequence *&);

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const KDL::Corba::vector &); // copying version
 void operator<<= (CORBA::Any &, KDL::Corba::vector*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, KDL::Corba::vector *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const KDL::Corba::vector *&);

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const KDL::Corba::rotation &); // copying version
 void operator<<= (CORBA::Any &, KDL::Corba::rotation*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, KDL::Corba::rotation *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const KDL::Corba::rotation *&);

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const KDL::Corba::frame &); // copying version
 void operator<<= (CORBA::Any &, KDL::Corba::frame*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, KDL::Corba::frame *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const KDL::Corba::frame *&);

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const KDL::Corba::wrench &); // copying version
 void operator<<= (CORBA::Any &, KDL::Corba::wrench*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, KDL::Corba::wrench *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const KDL::Corba::wrench *&);

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const KDL::Corba::twist &); // copying version
 void operator<<= (CORBA::Any &, KDL::Corba::twist*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, KDL::Corba::twist *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const KDL::Corba::twist *&);

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:71

#if !defined _TAO_CDR_OP_KDL_Corba_DoubleSequence_H_
#define _TAO_CDR_OP_KDL_Corba_DoubleSequence_H_

 CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const KDL::Corba::DoubleSequence &
  );
 CORBA::Boolean operator>> (
    TAO_InputCDR &,
    KDL::Corba::DoubleSequence &
  );

#endif /* _TAO_CDR_OP_KDL_Corba_DoubleSequence_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:54

 CORBA::Boolean operator<< (TAO_OutputCDR &, const KDL::Corba::vector &);
 CORBA::Boolean operator>> (TAO_InputCDR &, KDL::Corba::vector &);

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:54

 CORBA::Boolean operator<< (TAO_OutputCDR &, const KDL::Corba::rotation &);
 CORBA::Boolean operator>> (TAO_InputCDR &, KDL::Corba::rotation &);

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:54

 CORBA::Boolean operator<< (TAO_OutputCDR &, const KDL::Corba::frame &);
 CORBA::Boolean operator>> (TAO_InputCDR &, KDL::Corba::frame &);

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:54

 CORBA::Boolean operator<< (TAO_OutputCDR &, const KDL::Corba::wrench &);
 CORBA::Boolean operator>> (TAO_InputCDR &, KDL::Corba::wrench &);

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:54

 CORBA::Boolean operator<< (TAO_OutputCDR &, const KDL::Corba::twist &);
 CORBA::Boolean operator>> (TAO_InputCDR &, KDL::Corba::twist &);

// TAO_IDL - Generated from
// be/be_codegen.cpp:955

#if defined (__ACE_INLINE__)
#include "KDLTypesC.inl"
#endif /* defined INLINE */

#if defined(_MSC_VER)
#pragma warning(pop)
#endif /* _MSC_VER */

#if defined (__BORLANDC__)
#pragma option pop
#endif /* __BORLANDC__ */

#endif /* ifndef */


